name: Build

on:
  push:
    branches: [ main ]
  pull_request:
    branches: [ main ]

jobs:
  build:
    runs-on: ${{ matrix.os }}
    strategy:
        matrix:
            os: [ubuntu-latest, windows-latest, macos-latest]

    steps:
      - uses: actions/checkout@v3
        with:
          submodules: true
      - uses: dart-lang/setup-dart@v1

      - name: Install dependencies
        run: dart pub get

      - name: Verify formatting
        run: dart format --output=none --set-exit-if-changed .

      - name: Analyze project source
        run: dart analyze

      - name: Recompile tinydtls binary for Linux
        if: matrix.os == 'ubuntu-latest'
        run: |
          cd third_party/tinydtls
          ./autogen.sh
          ./configure
          make
          cd ../..
          mv third_party/tinydtls/libtinydtls.so libtinydtls.so

      - name: Recompile tinydtls binary for Windows
        if: matrix.os == 'windows-latest'
        run: |
          cd third_party/tinydtls
          cmake -G "Unix Makefiles" -DBUILD_SHARED_LIBS=true .
          make
          cd ../..
          mv third_party/tinydtls/libtinydtls.dll tinydtls.dll

      - name: Recompile tinydtls binary for macOS
        if: matrix.os == 'macos-latest'
        run: |
          # Remove the signature of the dart binary
          # See https://github.com/dart-lang/sdk/issues/38314
          codesign --remove-signature $DART_HOME/bin/dart

          cd third_party/tinydtls
          cmake -G "Unix Makefiles" -DBUILD_SHARED_LIBS=true .
          make
          cd ../..
          cp third_party/tinydtls/*.dylib .

      - name: Run tests with coverage
        run: dart test --coverage="coverage"

      - name: Convert coverage to ICOV
        run: dart run coverage:format_coverage --lcov --in=coverage --out=coverage.lcov --report-on=lib

      - uses: codecov/codecov-action@v2
        with:
          token: ${{ secrets.CODECOV_TOKEN }}
          file: coverage.lcov
          name: Upload to codecov.io
          verbose: true
